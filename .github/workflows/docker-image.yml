name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main  # Dispara o pipeline quando houver push na branch main
  workflow_dispatch:  # Permite acionar o pipeline manualmente

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}  # Usando o secret do projeto
  REGION: 'us-central1'                      # Região onde o serviço será implantado
  FUNCTION_NAME: 'cripto-app'                # Nome do serviço no Cloud Run
  MEMORY: '2Gi'                              # Memória alocada para o serviço

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Autenticar no Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1  # Atualizado para v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Configurar o Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}

      # Instalar dependências do Python (se necessário)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      # Validar configuração do Docker antes de buildar a imagem
      - name: Validate Docker setup
        run: |
          docker --version
          gcloud --version

      # Construir a imagem Docker e enviar para o Google Container Registry
      - name: Build and push Docker image
        run: |
          gcloud auth configure-docker
          docker build -t gcr.io/${{ env.GCP_PROJECT }}/${{ env.FUNCTION_NAME }} .
          docker push gcr.io/${{ env.GCP_PROJECT }}/${{ env.FUNCTION_NAME }}

      # Implantar no Google Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.FUNCTION_NAME }} \
            --image gcr.io/${{ env.GCP_PROJECT }}/${{ env.FUNCTION_NAME }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --memory ${{ env.MEMORY }} \
            --no-allow-unauthenticated \
            --timeout 900

      # Capturar a URL do serviço implantado
      - name: Get Service URL
        id: get-service-url
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.FUNCTION_NAME }} --region ${{ env.REGION }} --format='value(status.url)')
          echo "Service URL: ${SERVICE_URL}"
          echo "::set-output name=service_url::${SERVICE_URL}"

      # Exibir a URL do serviço para visibilidade
      - name: Output Service URL
        run: echo "Service is available at ${{ steps.get-service-url.outputs.service_url }}"
